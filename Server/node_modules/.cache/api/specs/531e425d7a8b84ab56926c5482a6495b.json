{
  "openapi": "3.0.0",
  "paths": {
    "/assets": {
      "get": {
        "operationId": "AssetController_getAll",
        "summary": "Fetch all Assets",
        "description": "### Returns all `Asset`s associated with a Game.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Specifies the page to fetch",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of items on each page",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "A list of Assets",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the Asset"
                          },
                          "attributes": {
                            "description": "The attributes of the Asset",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "traitType": {
                                  "type": "string",
                                  "description": "The name of the trait"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value of the trait"
                                }
                              },
                              "required": [
                                "traitType",
                                "value"
                              ]
                            }
                          },
                          "created": {
                            "type": "number",
                            "description": "The date the Asset was created"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the Asset"
                          },
                          "collection": {
                            "description": "The collection the Asset belongs to",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name given to the collection"
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description given to the collection"
                                  },
                                  "imageUrl": {
                                    "type": "string",
                                    "description": "The url of the image used to represent the collection",
                                    "nullable": true
                                  },
                                  "mintAddress": {
                                    "type": "string",
                                    "description": "The mint address of the collection on-chain",
                                    "nullable": true
                                  },
                                  "created": {
                                    "type": "number",
                                    "description": "Timestamp of collection creation"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "description",
                                  "created"
                                ]
                              }
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "The description provided when the Asset was created"
                          },
                          "imageUrl": {
                            "type": "string",
                            "description": "The URI for the image representing the Asset"
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the Asset",
                            "enum": [
                              "Unprocessed",
                              "Processing",
                              "Committed"
                            ]
                          },
                          "escrow": {
                            "type": "boolean",
                            "description": "If the asset is in escrow or not"
                          },
                          "mintAddress": {
                            "type": "string",
                            "description": "The address of the Asset on the blockchain"
                          },
                          "owner": {
                            "description": "The current owner of the Asset.",
                            "nullable": true,
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "description": "The wallet that currently holds this asset",
                                    "nullable": true
                                  },
                                  "referenceId": {
                                    "type": "string",
                                    "description": "The reference id associated with the wallet",
                                    "nullable": true
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "attributes",
                          "created",
                          "name",
                          "description",
                          "imageUrl",
                          "status",
                          "escrow",
                          "mintAddress"
                        ]
                      }
                    },
                    "meta": {
                      "description": "Pagination related metadata",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "description": "The page number fetched"
                            },
                            "perPage": {
                              "type": "number",
                              "description": "The number of items in each page"
                            },
                            "totalPages": {
                              "type": "number",
                              "description": "The total number of pages in all results"
                            },
                            "totalResults": {
                              "type": "number",
                              "description": "The total result count"
                            }
                          },
                          "required": [
                            "page",
                            "perPage",
                            "totalPages",
                            "totalResults"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Assets"
        ]
      },
      "post": {
        "operationId": "AssetController_mintNft",
        "summary": "Create Asset",
        "description": "### Creates a new `Asset` and assigns it to a `User`.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "details": {
                    "description": "The asset to create",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "attributes": {
                            "description": "Add attributes to your Asset",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "traitType": {
                                  "type": "string",
                                  "description": "The name of the trait"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value of the trait"
                                }
                              },
                              "required": [
                                "traitType",
                                "value"
                              ]
                            }
                          },
                          "collectionId": {
                            "type": "string",
                            "description": "Add the Asset to an existing collection"
                          },
                          "description": {
                            "type": "string",
                            "description": "A description for the Asset",
                            "maxLength": 64
                          },
                          "imageUrl": {
                            "type": "string",
                            "description": "A url to the image underlying the Asset"
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 32,
                            "description": "The name of the Asset. Max length: 32 chars"
                          }
                        },
                        "required": [
                          "description",
                          "imageUrl",
                          "name"
                        ]
                      }
                    ]
                  },
                  "destinationUserReferenceId": {
                    "type": "string",
                    "description": "The reference id of the user the asset should be assigned to"
                  }
                },
                "required": [
                  "details",
                  "destinationUserReferenceId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the Asset"
                    },
                    "attributes": {
                      "description": "The attributes of the Asset",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "traitType": {
                            "type": "string",
                            "description": "The name of the trait"
                          },
                          "value": {
                            "type": "string",
                            "description": "The value of the trait"
                          }
                        },
                        "required": [
                          "traitType",
                          "value"
                        ]
                      }
                    },
                    "created": {
                      "type": "number",
                      "description": "The date the Asset was created"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the Asset"
                    },
                    "collection": {
                      "description": "The collection the Asset belongs to",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name given to the collection"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description given to the collection"
                            },
                            "imageUrl": {
                              "type": "string",
                              "description": "The url of the image used to represent the collection",
                              "nullable": true
                            },
                            "mintAddress": {
                              "type": "string",
                              "description": "The mint address of the collection on-chain",
                              "nullable": true
                            },
                            "created": {
                              "type": "number",
                              "description": "Timestamp of collection creation"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "created"
                          ]
                        }
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "The description provided when the Asset was created"
                    },
                    "imageUrl": {
                      "type": "string",
                      "description": "The URI for the image representing the Asset"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of the Asset",
                      "enum": [
                        "Unprocessed",
                        "Processing",
                        "Committed"
                      ]
                    },
                    "escrow": {
                      "type": "boolean",
                      "description": "If the asset is in escrow or not"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "The address of the Asset on the blockchain"
                    },
                    "owner": {
                      "description": "The current owner of the Asset.",
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "description": "The wallet that currently holds this asset",
                              "nullable": true
                            },
                            "referenceId": {
                              "type": "string",
                              "description": "The reference id associated with the wallet",
                              "nullable": true
                            }
                          }
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "attributes",
                    "created",
                    "name",
                    "description",
                    "imageUrl",
                    "status",
                    "escrow",
                    "mintAddress"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/assets/{id}": {
      "get": {
        "operationId": "AssetController_get",
        "summary": "Fetch Asset",
        "description": "### Returns an `Asset`.\n      \nReturns Asset details, such as its attributes, owner, and on-chain status.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Specifies the Asset to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the Asset"
                    },
                    "attributes": {
                      "description": "The attributes of the Asset",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "traitType": {
                            "type": "string",
                            "description": "The name of the trait"
                          },
                          "value": {
                            "type": "string",
                            "description": "The value of the trait"
                          }
                        },
                        "required": [
                          "traitType",
                          "value"
                        ]
                      }
                    },
                    "created": {
                      "type": "number",
                      "description": "The date the Asset was created"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the Asset"
                    },
                    "collection": {
                      "description": "The collection the Asset belongs to",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name given to the collection"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description given to the collection"
                            },
                            "imageUrl": {
                              "type": "string",
                              "description": "The url of the image used to represent the collection",
                              "nullable": true
                            },
                            "mintAddress": {
                              "type": "string",
                              "description": "The mint address of the collection on-chain",
                              "nullable": true
                            },
                            "created": {
                              "type": "number",
                              "description": "Timestamp of collection creation"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "created"
                          ]
                        }
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "The description provided when the Asset was created"
                    },
                    "imageUrl": {
                      "type": "string",
                      "description": "The URI for the image representing the Asset"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of the Asset",
                      "enum": [
                        "Unprocessed",
                        "Processing",
                        "Committed"
                      ]
                    },
                    "escrow": {
                      "type": "boolean",
                      "description": "If the asset is in escrow or not"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "The address of the Asset on the blockchain"
                    },
                    "owner": {
                      "description": "The current owner of the Asset.",
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "description": "The wallet that currently holds this asset",
                              "nullable": true
                            },
                            "referenceId": {
                              "type": "string",
                              "description": "The reference id associated with the wallet",
                              "nullable": true
                            }
                          }
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "attributes",
                    "created",
                    "name",
                    "description",
                    "imageUrl",
                    "status",
                    "escrow",
                    "mintAddress"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Assets"
        ]
      },
      "put": {
        "operationId": "AssetController_put",
        "summary": "Update an Asset",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "imageUrl": {
                    "type": "string",
                    "description": "Image url of the Asset"
                  },
                  "attributes": {
                    "description": "Update attributes on the Asset",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "traitType": {
                          "type": "string",
                          "description": "The name of the trait"
                        },
                        "value": {
                          "type": "string",
                          "description": "The value of the trait"
                        }
                      },
                      "required": [
                        "traitType",
                        "value"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the Asset"
                    },
                    "attributes": {
                      "description": "The attributes of the Asset",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "traitType": {
                            "type": "string",
                            "description": "The name of the trait"
                          },
                          "value": {
                            "type": "string",
                            "description": "The value of the trait"
                          }
                        },
                        "required": [
                          "traitType",
                          "value"
                        ]
                      }
                    },
                    "created": {
                      "type": "number",
                      "description": "The date the Asset was created"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the Asset"
                    },
                    "collection": {
                      "description": "The collection the Asset belongs to",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name given to the collection"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description given to the collection"
                            },
                            "imageUrl": {
                              "type": "string",
                              "description": "The url of the image used to represent the collection",
                              "nullable": true
                            },
                            "mintAddress": {
                              "type": "string",
                              "description": "The mint address of the collection on-chain",
                              "nullable": true
                            },
                            "created": {
                              "type": "number",
                              "description": "Timestamp of collection creation"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "created"
                          ]
                        }
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "The description provided when the Asset was created"
                    },
                    "imageUrl": {
                      "type": "string",
                      "description": "The URI for the image representing the Asset"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of the Asset",
                      "enum": [
                        "Unprocessed",
                        "Processing",
                        "Committed"
                      ]
                    },
                    "escrow": {
                      "type": "boolean",
                      "description": "If the asset is in escrow or not"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "The address of the Asset on the blockchain"
                    },
                    "owner": {
                      "description": "The current owner of the Asset.",
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "description": "The wallet that currently holds this asset",
                              "nullable": true
                            },
                            "referenceId": {
                              "type": "string",
                              "description": "The reference id associated with the wallet",
                              "nullable": true
                            }
                          }
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "attributes",
                    "created",
                    "name",
                    "description",
                    "imageUrl",
                    "status",
                    "escrow",
                    "mintAddress"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/assets/{id}/transfer": {
      "post": {
        "operationId": "AssetController_transfer",
        "summary": "Transfer Asset",
        "description": "### Transfers an `Asset` between `User`s, or to any on-chain wallet address..\n      \nRequires `User` consent. `User` provides consent at the URL returned by the method.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Specifies the Asset to transfer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "onBehalfOf": {
                    "type": "string",
                    "description": "Identifies the User tranferring the Asset"
                  },
                  "destinationUserReferenceId": {
                    "type": "string",
                    "description": "Identifies the User receiving the Asset"
                  },
                  "destinationWallet": {
                    "type": "string",
                    "description": "Address of the wallet receiving the Asset"
                  }
                },
                "required": [
                  "onBehalfOf"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/assets/{id}/sell": {
      "post": {
        "operationId": "AssetController_sell",
        "summary": "[coming soon] List Asset for sale",
        "description": "### Lists an Asset for sale on the marketplace.\n      \nRequires `User` consent. `User` provides consent at the URL returned by the method.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Specifies the Asset to lis",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "number",
                    "description": "Listing price for the Asset"
                  }
                },
                "required": [
                  "price"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/assets/{id}/buy": {
      "post": {
        "operationId": "AssetController_buy",
        "summary": "[coming soon] Buy Asset",
        "description": "### Buys an `Asset` from the marketplace.\n      \nRequires `User` consent. `User` provides consent at the URL returned by the method.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Specifies the Asset to buy",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "onBehalfOf": {
                    "type": "string",
                    "description": "The reference id of the buyer"
                  }
                },
                "required": [
                  "onBehalfOf"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/assets/{id}/cancel-sale": {
      "post": {
        "operationId": "AssetController_cancelSale",
        "summary": "[coming soon] Cancel Asset listing",
        "description": "### Removes an `Asset` listed for sale from the marketplace.\n      \nRequires `User` consent. `User` provides consent at the URL returned by the method.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Specifies the Asset to cancel the sale for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/assets/{id}/lend": {
      "post": {
        "operationId": "AssetController_createLease",
        "summary": "Lend Asset",
        "description": "### Lends an `Asset` to another `User`.\n      \nCreates a `Lending Grant` that must be accepted by the borrower.\n      Unless otherise specified, the `Asset` will return to the `User` after 30 days.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Specifies the Asset to lend",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lenderReferenceId": {
                    "type": "string",
                    "description": "Identifies the User lending the Asset"
                  },
                  "borrowerReferenceId": {
                    "type": "string",
                    "description": "Identifies the User borrowing the Asset"
                  },
                  "expiration": {
                    "type": "number",
                    "description": "The time the lending grant will expire"
                  }
                },
                "required": [
                  "lenderReferenceId",
                  "borrowerReferenceId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique ID of the LendingGrant entry"
                    },
                    "assetId": {
                      "type": "string",
                      "description": "The ID of the Asset being borrowed"
                    },
                    "ownerReferenceId": {
                      "type": "string",
                      "description": "The reference ID of the owner of the Asset"
                    },
                    "borrowerReferenceId": {
                      "type": "string",
                      "description": "The reference ID of the borrower of the Asset"
                    },
                    "expiration": {
                      "format": "date-time",
                      "type": "string",
                      "description": "The expiration date and time of the borrowing period"
                    },
                    "created": {
                      "format": "date-time",
                      "type": "string",
                      "description": "The date and time when the borrow entry was created"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of the LendingGrant entry",
                      "enum": [
                        "Pending",
                        "Accepted"
                      ]
                    },
                    "lender": {
                      "description": "The current owner of the Asset, if available",
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "referenceId": {
                              "type": "string",
                              "description": "The reference id of the user"
                            },
                            "address": {
                              "type": "string",
                              "description": "The wallet address of the user"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email of the user"
                            }
                          },
                          "required": [
                            "referenceId",
                            "address",
                            "email"
                          ]
                        }
                      ]
                    },
                    "borrower": {
                      "description": "The current borrower of the Asset, if available",
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "referenceId": {
                              "type": "string",
                              "description": "The reference id of the user"
                            },
                            "address": {
                              "type": "string",
                              "description": "The wallet address of the user"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email of the user"
                            }
                          },
                          "required": [
                            "referenceId",
                            "address",
                            "email"
                          ]
                        }
                      ]
                    },
                    "environment": {
                      "type": "object",
                      "description": "The current environment of the Asset"
                    },
                    "projectId": {
                      "type": "string",
                      "description": "The lending grant's project ID"
                    }
                  },
                  "required": [
                    "id",
                    "assetId",
                    "ownerReferenceId",
                    "borrowerReferenceId",
                    "expiration",
                    "created",
                    "status",
                    "environment",
                    "projectId"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "ProjectUserController_getAll",
        "summary": "Fetch all Users",
        "description": "### Returns all `User`s registered in the game.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Specifies the page to fetch",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of items on each page",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "A list of users",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "referenceId": {
                            "type": "string",
                            "description": "The reference id of the user"
                          },
                          "address": {
                            "type": "string",
                            "description": "The wallet address of the user"
                          },
                          "email": {
                            "type": "string",
                            "description": "The email of the user"
                          }
                        },
                        "required": [
                          "referenceId",
                          "address",
                          "email"
                        ]
                      }
                    },
                    "meta": {
                      "description": "Pagination related metadata",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "description": "The page number fetched"
                            },
                            "perPage": {
                              "type": "number",
                              "description": "The number of items in each page"
                            },
                            "totalPages": {
                              "type": "number",
                              "description": "The total number of pages in all results"
                            },
                            "totalResults": {
                              "type": "number",
                              "description": "The total result count"
                            }
                          },
                          "required": [
                            "page",
                            "perPage",
                            "totalPages",
                            "totalResults"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "post": {
        "operationId": "ProjectUserController_create",
        "summary": "Register User",
        "description": "### Registers a new user with your Game.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "referenceId": {
                    "type": "string",
                    "description": "The reference id of the user. Must be unique, and cannot contain the character \"/\"."
                  },
                  "email": {
                    "type": "string",
                    "description": "`User`'s email address."
                  }
                },
                "required": [
                  "referenceId",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "referenceId": {
                      "type": "string",
                      "description": "The reference id of the user"
                    },
                    "address": {
                      "type": "string",
                      "description": "The wallet address of the user"
                    },
                    "email": {
                      "type": "string",
                      "description": "The email of the user"
                    }
                  },
                  "required": [
                    "referenceId",
                    "address",
                    "email"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{referenceId}": {
      "get": {
        "operationId": "ProjectUserController_get",
        "summary": "Fetch User",
        "description": "### Returns `User` details.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "referenceId",
            "required": true,
            "in": "path",
            "description": "Identifies the User",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "referenceId": {
                      "type": "string",
                      "description": "The reference id of the user"
                    },
                    "address": {
                      "type": "string",
                      "description": "The wallet address of the user"
                    },
                    "email": {
                      "type": "string",
                      "description": "The email of the user"
                    }
                  },
                  "required": [
                    "referenceId",
                    "address",
                    "email"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{referenceId}/assets": {
      "get": {
        "operationId": "ProjectUserController_getUserAssets",
        "summary": "Fetch User Assets",
        "description": "### Returns a list of all the `Asset`s owned by a `User` registered with your game.\n      \nThis method only returns `Asset`s created by the Game associated with the API key.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "referenceId",
            "required": true,
            "in": "path",
            "description": "Identifies the User",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Specifies the page to fetch",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of items on each page",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "A list of Assets",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the Asset"
                          },
                          "attributes": {
                            "description": "The attributes of the Asset",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "traitType": {
                                  "type": "string",
                                  "description": "The name of the trait"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value of the trait"
                                }
                              },
                              "required": [
                                "traitType",
                                "value"
                              ]
                            }
                          },
                          "created": {
                            "type": "number",
                            "description": "The date the Asset was created"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the Asset"
                          },
                          "collection": {
                            "description": "The collection the Asset belongs to",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name given to the collection"
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description given to the collection"
                                  },
                                  "imageUrl": {
                                    "type": "string",
                                    "description": "The url of the image used to represent the collection",
                                    "nullable": true
                                  },
                                  "mintAddress": {
                                    "type": "string",
                                    "description": "The mint address of the collection on-chain",
                                    "nullable": true
                                  },
                                  "created": {
                                    "type": "number",
                                    "description": "Timestamp of collection creation"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "description",
                                  "created"
                                ]
                              }
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "The description provided when the Asset was created"
                          },
                          "imageUrl": {
                            "type": "string",
                            "description": "The URI for the image representing the Asset"
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the Asset",
                            "enum": [
                              "Unprocessed",
                              "Processing",
                              "Committed"
                            ]
                          },
                          "escrow": {
                            "type": "boolean",
                            "description": "If the asset is in escrow or not"
                          },
                          "mintAddress": {
                            "type": "string",
                            "description": "The address of the Asset on the blockchain"
                          },
                          "owner": {
                            "description": "The current owner of the Asset.",
                            "nullable": true,
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "description": "The wallet that currently holds this asset",
                                    "nullable": true
                                  },
                                  "referenceId": {
                                    "type": "string",
                                    "description": "The reference id associated with the wallet",
                                    "nullable": true
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "attributes",
                          "created",
                          "name",
                          "description",
                          "imageUrl",
                          "status",
                          "escrow",
                          "mintAddress"
                        ]
                      }
                    },
                    "meta": {
                      "description": "Pagination related metadata",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "description": "The page number fetched"
                            },
                            "perPage": {
                              "type": "number",
                              "description": "The number of items in each page"
                            },
                            "totalPages": {
                              "type": "number",
                              "description": "The total number of pages in all results"
                            },
                            "totalResults": {
                              "type": "number",
                              "description": "The total result count"
                            }
                          },
                          "required": [
                            "page",
                            "perPage",
                            "totalPages",
                            "totalResults"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/asset-collections": {
      "get": {
        "operationId": "CollectionController_getAll",
        "summary": "Fetch all Asset Collections",
        "description": "### Returns a list of `Asset Collection`s.\n      \nThis method will only return `Asset Collection`s that were created by the\n      Game associated with the API key.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Specifies the page to fetch",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of items on each page",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "A list of Collections",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name given to the collection"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description given to the collection"
                          },
                          "imageUrl": {
                            "type": "string",
                            "description": "The url of the image used to represent the collection",
                            "nullable": true
                          },
                          "mintAddress": {
                            "type": "string",
                            "description": "The mint address of the collection on-chain",
                            "nullable": true
                          },
                          "created": {
                            "type": "number",
                            "description": "Timestamp of collection creation"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "created"
                        ]
                      }
                    },
                    "meta": {
                      "description": "Pagination related metadata",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "description": "The page number fetched"
                            },
                            "perPage": {
                              "type": "number",
                              "description": "The number of items in each page"
                            },
                            "totalPages": {
                              "type": "number",
                              "description": "The total number of pages in all results"
                            },
                            "totalResults": {
                              "type": "number",
                              "description": "The total result count"
                            }
                          },
                          "required": [
                            "page",
                            "perPage",
                            "totalPages",
                            "totalResults"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Asset Collections"
        ]
      },
      "post": {
        "operationId": "CollectionController_createCollection",
        "summary": "Create New Asset Collection",
        "description": "### Creates a new `Asset Collection`.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Names the Asset Collection"
                  },
                  "description": {
                    "type": "string",
                    "description": "Describes the Asset Collection"
                  },
                  "imageUrl": {
                    "type": "string",
                    "description": "URL for the Asset Collection's image"
                  }
                },
                "required": [
                  "name",
                  "description",
                  "imageUrl"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name given to the collection"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description given to the collection"
                    },
                    "imageUrl": {
                      "type": "string",
                      "description": "The url of the image used to represent the collection",
                      "nullable": true
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "The mint address of the collection on-chain",
                      "nullable": true
                    },
                    "created": {
                      "type": "number",
                      "description": "Timestamp of collection creation"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "created"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Asset Collections"
        ]
      }
    },
    "/asset-collections/{id}": {
      "get": {
        "operationId": "CollectionController_getCollection",
        "summary": "Fetch Asset Collection",
        "description": "### Returns an existing `Asset Collection`.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identifies the Asset Collection",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name given to the collection"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description given to the collection"
                    },
                    "imageUrl": {
                      "type": "string",
                      "description": "The url of the image used to represent the collection",
                      "nullable": true
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "The mint address of the collection on-chain",
                      "nullable": true
                    },
                    "created": {
                      "type": "number",
                      "description": "Timestamp of collection creation"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "created"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Asset Collections"
        ]
      }
    },
    "/asset-collections/{id}/assets": {
      "get": {
        "operationId": "CollectionController_getAssets",
        "summary": "Fetch Asset Collection's Assets",
        "description": "### Returns a list of `Asset`s in an `Asset Collection`.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identifies the Asset Collection",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Specifies the page to fetch",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of items on each page",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "A list of Assets",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the Asset"
                          },
                          "attributes": {
                            "description": "The attributes of the Asset",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "traitType": {
                                  "type": "string",
                                  "description": "The name of the trait"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value of the trait"
                                }
                              },
                              "required": [
                                "traitType",
                                "value"
                              ]
                            }
                          },
                          "created": {
                            "type": "number",
                            "description": "The date the Asset was created"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the Asset"
                          },
                          "collection": {
                            "description": "The collection the Asset belongs to",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name given to the collection"
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description given to the collection"
                                  },
                                  "imageUrl": {
                                    "type": "string",
                                    "description": "The url of the image used to represent the collection",
                                    "nullable": true
                                  },
                                  "mintAddress": {
                                    "type": "string",
                                    "description": "The mint address of the collection on-chain",
                                    "nullable": true
                                  },
                                  "created": {
                                    "type": "number",
                                    "description": "Timestamp of collection creation"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "description",
                                  "created"
                                ]
                              }
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "The description provided when the Asset was created"
                          },
                          "imageUrl": {
                            "type": "string",
                            "description": "The URI for the image representing the Asset"
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the Asset",
                            "enum": [
                              "Unprocessed",
                              "Processing",
                              "Committed"
                            ]
                          },
                          "escrow": {
                            "type": "boolean",
                            "description": "If the asset is in escrow or not"
                          },
                          "mintAddress": {
                            "type": "string",
                            "description": "The address of the Asset on the blockchain"
                          },
                          "owner": {
                            "description": "The current owner of the Asset.",
                            "nullable": true,
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "description": "The wallet that currently holds this asset",
                                    "nullable": true
                                  },
                                  "referenceId": {
                                    "type": "string",
                                    "description": "The reference id associated with the wallet",
                                    "nullable": true
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "attributes",
                          "created",
                          "name",
                          "description",
                          "imageUrl",
                          "status",
                          "escrow",
                          "mintAddress"
                        ]
                      }
                    },
                    "meta": {
                      "description": "Pagination related metadata",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "description": "The page number fetched"
                            },
                            "perPage": {
                              "type": "number",
                              "description": "The number of items in each page"
                            },
                            "totalPages": {
                              "type": "number",
                              "description": "The total number of pages in all results"
                            },
                            "totalResults": {
                              "type": "number",
                              "description": "The total result count"
                            }
                          },
                          "required": [
                            "page",
                            "perPage",
                            "totalPages",
                            "totalResults"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Asset Collections"
        ]
      }
    },
    "/asset-collections/default/assets": {
      "get": {
        "operationId": "CollectionController_getDefaultAssets",
        "summary": "Fetch Default Asset Collection's Assets",
        "description": "### Returns a list of `Asset`s in an `Asset Collection`.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Specifies the page to fetch",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of items on each page",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "A list of Assets",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the Asset"
                          },
                          "attributes": {
                            "description": "The attributes of the Asset",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "traitType": {
                                  "type": "string",
                                  "description": "The name of the trait"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value of the trait"
                                }
                              },
                              "required": [
                                "traitType",
                                "value"
                              ]
                            }
                          },
                          "created": {
                            "type": "number",
                            "description": "The date the Asset was created"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the Asset"
                          },
                          "collection": {
                            "description": "The collection the Asset belongs to",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name given to the collection"
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description given to the collection"
                                  },
                                  "imageUrl": {
                                    "type": "string",
                                    "description": "The url of the image used to represent the collection",
                                    "nullable": true
                                  },
                                  "mintAddress": {
                                    "type": "string",
                                    "description": "The mint address of the collection on-chain",
                                    "nullable": true
                                  },
                                  "created": {
                                    "type": "number",
                                    "description": "Timestamp of collection creation"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "description",
                                  "created"
                                ]
                              }
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "The description provided when the Asset was created"
                          },
                          "imageUrl": {
                            "type": "string",
                            "description": "The URI for the image representing the Asset"
                          },
                          "status": {
                            "type": "string",
                            "description": "The current status of the Asset",
                            "enum": [
                              "Unprocessed",
                              "Processing",
                              "Committed"
                            ]
                          },
                          "escrow": {
                            "type": "boolean",
                            "description": "If the asset is in escrow or not"
                          },
                          "mintAddress": {
                            "type": "string",
                            "description": "The address of the Asset on the blockchain"
                          },
                          "owner": {
                            "description": "The current owner of the Asset.",
                            "nullable": true,
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "description": "The wallet that currently holds this asset",
                                    "nullable": true
                                  },
                                  "referenceId": {
                                    "type": "string",
                                    "description": "The reference id associated with the wallet",
                                    "nullable": true
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "attributes",
                          "created",
                          "name",
                          "description",
                          "imageUrl",
                          "status",
                          "escrow",
                          "mintAddress"
                        ]
                      }
                    },
                    "meta": {
                      "description": "Pagination related metadata",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "description": "The page number fetched"
                            },
                            "perPage": {
                              "type": "number",
                              "description": "The number of items in each page"
                            },
                            "totalPages": {
                              "type": "number",
                              "description": "The total number of pages in all results"
                            },
                            "totalResults": {
                              "type": "number",
                              "description": "The total result count"
                            }
                          },
                          "required": [
                            "page",
                            "perPage",
                            "totalPages",
                            "totalResults"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Asset Collections"
        ]
      }
    },
    "/asset-templates": {
      "post": {
        "operationId": "AssetTemplateController_create",
        "summary": "Create Asset Template",
        "description": "### Creates a new `AssetTemplate`.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Names the Asset created by the Template."
                  },
                  "description": {
                    "type": "string",
                    "description": "Describes the Asset created by the Template."
                  },
                  "sourceImage": {
                    "type": "string",
                    "description": "URL for the Asset's image",
                    "default": "https://solana.com/src/img/branding/solanaLogoMark.png"
                  },
                  "collectionId": {
                    "type": "string",
                    "description": "Identifies the Asset Collection any Assets created by the Template will be assigned to"
                  },
                  "attributes": {
                    "description": "Attributes for the Asset created by the Template",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "traitType": {
                          "type": "string",
                          "description": "The name of the trait"
                        },
                        "value": {
                          "type": "string",
                          "description": "The value of the trait"
                        }
                      },
                      "required": [
                        "traitType",
                        "value"
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "description",
                  "sourceImage"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the Asset Template"
                    },
                    "name": {
                      "type": "string",
                      "description": "When an Asset is created from this Asset Template, this name will be used"
                    },
                    "description": {
                      "type": "string",
                      "description": "When an Asset is created from this Asset Template, this description will be used"
                    },
                    "sourceImage": {
                      "type": "string",
                      "description": "When an Asset is created from this Asset Template, this image will be used"
                    },
                    "collection": {
                      "description": "When an Asset is created from this Asset Template, it will be assigned to this Collection",
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name given to the collection"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description given to the collection"
                            },
                            "imageUrl": {
                              "type": "string",
                              "description": "The url of the image used to represent the collection",
                              "nullable": true
                            },
                            "mintAddress": {
                              "type": "string",
                              "description": "The mint address of the collection on-chain",
                              "nullable": true
                            },
                            "created": {
                              "type": "number",
                              "description": "Timestamp of collection creation"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "created"
                          ]
                        }
                      ]
                    },
                    "attributes": {
                      "description": "When an Asset is created from this Asset Template, these attributes will be added to the Asset",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "traitType": {
                            "type": "string",
                            "description": "The name of the trait"
                          },
                          "value": {
                            "type": "string",
                            "description": "The value of the trait"
                          }
                        },
                        "required": [
                          "traitType",
                          "value"
                        ]
                      }
                    },
                    "created": {
                      "type": "string",
                      "description": "Timestamp of asset creation"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "sourceImage",
                    "created"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Asset Templates"
        ]
      },
      "get": {
        "operationId": "AssetTemplateController_getAssetTemplates",
        "summary": "Fetch Asset Templates",
        "description": "### Returns a list of `AssetTemplate`s.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Specifies the page to fetch",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "The number of items on each page",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "A list of Asset Templates",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the Asset Template"
                          },
                          "name": {
                            "type": "string",
                            "description": "When an Asset is created from this Asset Template, this name will be used"
                          },
                          "description": {
                            "type": "string",
                            "description": "When an Asset is created from this Asset Template, this description will be used"
                          },
                          "sourceImage": {
                            "type": "string",
                            "description": "When an Asset is created from this Asset Template, this image will be used"
                          },
                          "collection": {
                            "description": "When an Asset is created from this Asset Template, it will be assigned to this Collection",
                            "nullable": true,
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name given to the collection"
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The description given to the collection"
                                  },
                                  "imageUrl": {
                                    "type": "string",
                                    "description": "The url of the image used to represent the collection",
                                    "nullable": true
                                  },
                                  "mintAddress": {
                                    "type": "string",
                                    "description": "The mint address of the collection on-chain",
                                    "nullable": true
                                  },
                                  "created": {
                                    "type": "number",
                                    "description": "Timestamp of collection creation"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "description",
                                  "created"
                                ]
                              }
                            ]
                          },
                          "attributes": {
                            "description": "When an Asset is created from this Asset Template, these attributes will be added to the Asset",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "traitType": {
                                  "type": "string",
                                  "description": "The name of the trait"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value of the trait"
                                }
                              },
                              "required": [
                                "traitType",
                                "value"
                              ]
                            }
                          },
                          "created": {
                            "type": "string",
                            "description": "Timestamp of asset creation"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "sourceImage",
                          "created"
                        ]
                      }
                    },
                    "meta": {
                      "description": "Pagination related metadata",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "description": "The page number fetched"
                            },
                            "perPage": {
                              "type": "number",
                              "description": "The number of items in each page"
                            },
                            "totalPages": {
                              "type": "number",
                              "description": "The total number of pages in all results"
                            },
                            "totalResults": {
                              "type": "number",
                              "description": "The total result count"
                            }
                          },
                          "required": [
                            "page",
                            "perPage",
                            "totalPages",
                            "totalResults"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Asset Templates"
        ]
      }
    },
    "/asset-templates/{id}/assets": {
      "post": {
        "operationId": "AssetTemplateController_mintFromTemplate",
        "summary": "Create New Asset from Asset Template",
        "description": "### Creates a new `Asset` from a specified `AssetTemplate` and assigns it to a given `User`.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identifies the Asset Template",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "destinationUserReferenceId": {
                    "type": "string",
                    "description": "Identifies the User receiving the Asset"
                  }
                },
                "required": [
                  "destinationUserReferenceId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the Asset"
                    },
                    "attributes": {
                      "description": "The attributes of the Asset",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "traitType": {
                            "type": "string",
                            "description": "The name of the trait"
                          },
                          "value": {
                            "type": "string",
                            "description": "The value of the trait"
                          }
                        },
                        "required": [
                          "traitType",
                          "value"
                        ]
                      }
                    },
                    "created": {
                      "type": "number",
                      "description": "The date the Asset was created"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the Asset"
                    },
                    "collection": {
                      "description": "The collection the Asset belongs to",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name given to the collection"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description given to the collection"
                            },
                            "imageUrl": {
                              "type": "string",
                              "description": "The url of the image used to represent the collection",
                              "nullable": true
                            },
                            "mintAddress": {
                              "type": "string",
                              "description": "The mint address of the collection on-chain",
                              "nullable": true
                            },
                            "created": {
                              "type": "number",
                              "description": "Timestamp of collection creation"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "created"
                          ]
                        }
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "The description provided when the Asset was created"
                    },
                    "imageUrl": {
                      "type": "string",
                      "description": "The URI for the image representing the Asset"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of the Asset",
                      "enum": [
                        "Unprocessed",
                        "Processing",
                        "Committed"
                      ]
                    },
                    "escrow": {
                      "type": "boolean",
                      "description": "If the asset is in escrow or not"
                    },
                    "mintAddress": {
                      "type": "string",
                      "description": "The address of the Asset on the blockchain"
                    },
                    "owner": {
                      "description": "The current owner of the Asset.",
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "description": "The wallet that currently holds this asset",
                              "nullable": true
                            },
                            "referenceId": {
                              "type": "string",
                              "description": "The reference id associated with the wallet",
                              "nullable": true
                            }
                          }
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "attributes",
                    "created",
                    "name",
                    "description",
                    "imageUrl",
                    "status",
                    "escrow",
                    "mintAddress"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Asset Templates"
        ]
      }
    },
    "/asset-templates/{id}": {
      "get": {
        "operationId": "AssetTemplateController_get",
        "summary": "Fetch Asset Template",
        "description": "### Returns an `AssetTemplate`.\n      \nIncludes the properties that will be used to convert the Asset\n      Template into an Asset.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identifies the Asset Template",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the Asset Template"
                    },
                    "name": {
                      "type": "string",
                      "description": "When an Asset is created from this Asset Template, this name will be used"
                    },
                    "description": {
                      "type": "string",
                      "description": "When an Asset is created from this Asset Template, this description will be used"
                    },
                    "sourceImage": {
                      "type": "string",
                      "description": "When an Asset is created from this Asset Template, this image will be used"
                    },
                    "collection": {
                      "description": "When an Asset is created from this Asset Template, it will be assigned to this Collection",
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name given to the collection"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description given to the collection"
                            },
                            "imageUrl": {
                              "type": "string",
                              "description": "The url of the image used to represent the collection",
                              "nullable": true
                            },
                            "mintAddress": {
                              "type": "string",
                              "description": "The mint address of the collection on-chain",
                              "nullable": true
                            },
                            "created": {
                              "type": "number",
                              "description": "Timestamp of collection creation"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "created"
                          ]
                        }
                      ]
                    },
                    "attributes": {
                      "description": "When an Asset is created from this Asset Template, these attributes will be added to the Asset",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "traitType": {
                            "type": "string",
                            "description": "The name of the trait"
                          },
                          "value": {
                            "type": "string",
                            "description": "The value of the trait"
                          }
                        },
                        "required": [
                          "traitType",
                          "value"
                        ]
                      }
                    },
                    "created": {
                      "type": "string",
                      "description": "Timestamp of asset creation"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "sourceImage",
                    "created"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Asset Templates"
        ]
      },
      "put": {
        "operationId": "AssetTemplateController_put",
        "summary": "Update Asset Template",
        "description": "### Update the properties of an `AssetTemplate`.\n      \nUpdating an `Asset Template` will not affect any `Asset`s that have\n      already been created using the template.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identifies the Asset Template",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Names the Asset created by the Template."
                  },
                  "description": {
                    "type": "string",
                    "description": "Describes the Asset created by the Template."
                  },
                  "sourceImage": {
                    "type": "string",
                    "description": "URL for the Asset's image",
                    "default": "https://solana.com/src/img/branding/solanaLogoMark.png"
                  },
                  "collectionId": {
                    "type": "string",
                    "description": "Identifies the Asset Collection any Assets created by the Template will be assigned to"
                  },
                  "attributes": {
                    "description": "Attributes for the Asset created by the Template",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "traitType": {
                          "type": "string",
                          "description": "The name of the trait"
                        },
                        "value": {
                          "type": "string",
                          "description": "The value of the trait"
                        }
                      },
                      "required": [
                        "traitType",
                        "value"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the Asset Template"
                    },
                    "name": {
                      "type": "string",
                      "description": "When an Asset is created from this Asset Template, this name will be used"
                    },
                    "description": {
                      "type": "string",
                      "description": "When an Asset is created from this Asset Template, this description will be used"
                    },
                    "sourceImage": {
                      "type": "string",
                      "description": "When an Asset is created from this Asset Template, this image will be used"
                    },
                    "collection": {
                      "description": "When an Asset is created from this Asset Template, it will be assigned to this Collection",
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name given to the collection"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description given to the collection"
                            },
                            "imageUrl": {
                              "type": "string",
                              "description": "The url of the image used to represent the collection",
                              "nullable": true
                            },
                            "mintAddress": {
                              "type": "string",
                              "description": "The mint address of the collection on-chain",
                              "nullable": true
                            },
                            "created": {
                              "type": "number",
                              "description": "Timestamp of collection creation"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "created"
                          ]
                        }
                      ]
                    },
                    "attributes": {
                      "description": "When an Asset is created from this Asset Template, these attributes will be added to the Asset",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "traitType": {
                            "type": "string",
                            "description": "The name of the trait"
                          },
                          "value": {
                            "type": "string",
                            "description": "The value of the trait"
                          }
                        },
                        "required": [
                          "traitType",
                          "value"
                        ]
                      }
                    },
                    "created": {
                      "type": "string",
                      "description": "Timestamp of asset creation"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "sourceImage",
                    "created"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Asset Templates"
        ]
      },
      "delete": {
        "operationId": "AssetTemplateController_delete",
        "summary": "Delete Asset Template",
        "description": "### Deletes an `AssetTemplate`.\n      \nDeleting an `Asset Template` will not affect any `Asset`s that have\n      already been created using the template.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identifies the Asset Template",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the Asset Template"
                    },
                    "name": {
                      "type": "string",
                      "description": "When an Asset is created from this Asset Template, this name will be used"
                    },
                    "description": {
                      "type": "string",
                      "description": "When an Asset is created from this Asset Template, this description will be used"
                    },
                    "sourceImage": {
                      "type": "string",
                      "description": "When an Asset is created from this Asset Template, this image will be used"
                    },
                    "collection": {
                      "description": "When an Asset is created from this Asset Template, it will be assigned to this Collection",
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name given to the collection"
                            },
                            "description": {
                              "type": "string",
                              "description": "The description given to the collection"
                            },
                            "imageUrl": {
                              "type": "string",
                              "description": "The url of the image used to represent the collection",
                              "nullable": true
                            },
                            "mintAddress": {
                              "type": "string",
                              "description": "The mint address of the collection on-chain",
                              "nullable": true
                            },
                            "created": {
                              "type": "number",
                              "description": "Timestamp of collection creation"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "created"
                          ]
                        }
                      ]
                    },
                    "attributes": {
                      "description": "When an Asset is created from this Asset Template, these attributes will be added to the Asset",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "traitType": {
                            "type": "string",
                            "description": "The name of the trait"
                          },
                          "value": {
                            "type": "string",
                            "description": "The value of the trait"
                          }
                        },
                        "required": [
                          "traitType",
                          "value"
                        ]
                      }
                    },
                    "created": {
                      "type": "string",
                      "description": "Timestamp of asset creation"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "sourceImage",
                    "created"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Asset Templates"
        ]
      }
    },
    "/asset-templates/{id}/checkout": {
      "post": {
        "operationId": "AssetTemplateController_checkout",
        "summary": "Create a Payment for an Asset",
        "description": "### Creates a Payment request for a `User` to purchase an `Asset`.\n      \n`User` completes the Payment request at the URL returned by this method. Once payment is complete, the `User` will receive the Asset.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identifies the Asset Template",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amountCents": {
                    "type": "number",
                    "description": "The price of the item in cents"
                  },
                  "quantity": {
                    "type": "number",
                    "description": "The quantity of the item"
                  },
                  "buyerId": {
                    "type": "string",
                    "description": "Reference id of the buyer"
                  }
                },
                "required": [
                  "amountCents",
                  "quantity",
                  "buyerId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "A URL the User must visit to complete the payment"
                    },
                    "id": {
                      "type": "string",
                      "description": "An id used to reference the payment"
                    }
                  },
                  "required": [
                    "url",
                    "id"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Asset Templates"
        ]
      }
    },
    "/lending-grants/{id}": {
      "get": {
        "operationId": "LendingController_getLease",
        "summary": "Fetch Lending Grant",
        "description": "### Returns details about a Lending Grant.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identifies the lending Grant",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique ID of the LendingGrant entry"
                    },
                    "assetId": {
                      "type": "string",
                      "description": "The ID of the Asset being borrowed"
                    },
                    "ownerReferenceId": {
                      "type": "string",
                      "description": "The reference ID of the owner of the Asset"
                    },
                    "borrowerReferenceId": {
                      "type": "string",
                      "description": "The reference ID of the borrower of the Asset"
                    },
                    "expiration": {
                      "format": "date-time",
                      "type": "string",
                      "description": "The expiration date and time of the borrowing period"
                    },
                    "created": {
                      "format": "date-time",
                      "type": "string",
                      "description": "The date and time when the borrow entry was created"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of the LendingGrant entry",
                      "enum": [
                        "Pending",
                        "Accepted"
                      ]
                    },
                    "lender": {
                      "description": "The current owner of the Asset, if available",
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "referenceId": {
                              "type": "string",
                              "description": "The reference id of the user"
                            },
                            "address": {
                              "type": "string",
                              "description": "The wallet address of the user"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email of the user"
                            }
                          },
                          "required": [
                            "referenceId",
                            "address",
                            "email"
                          ]
                        }
                      ]
                    },
                    "borrower": {
                      "description": "The current borrower of the Asset, if available",
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "referenceId": {
                              "type": "string",
                              "description": "The reference id of the user"
                            },
                            "address": {
                              "type": "string",
                              "description": "The wallet address of the user"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email of the user"
                            }
                          },
                          "required": [
                            "referenceId",
                            "address",
                            "email"
                          ]
                        }
                      ]
                    },
                    "environment": {
                      "type": "object",
                      "description": "The current environment of the Asset"
                    },
                    "projectId": {
                      "type": "string",
                      "description": "The lending grant's project ID"
                    }
                  },
                  "required": [
                    "id",
                    "assetId",
                    "ownerReferenceId",
                    "borrowerReferenceId",
                    "expiration",
                    "created",
                    "status",
                    "environment",
                    "projectId"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Lending Grants"
        ]
      },
      "delete": {
        "operationId": "LendingController_cancelLease",
        "summary": "Cancel Lending Grant",
        "description": "### Revokes a request to borrow an `Asset`.\n      \nReturns the `Asset` back to the lender.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identifies the lending Grant",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lenderReferenceId": {
                    "type": "string",
                    "description": "The reference id of the lender"
                  }
                },
                "required": [
                  "lenderReferenceId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Lending Grants"
        ]
      }
    },
    "/lending-grants/{id}/accept": {
      "post": {
        "operationId": "LendingController_acceptLease",
        "summary": "Accept Lending Grant",
        "description": "### Accepts a grant to borrow an `Asset`.\n      \nExecutes the lending grant, transfers `Asset` to borrower.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identifies the lending Grant",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "borrowerReferenceId": {
                    "type": "string",
                    "description": "The reference id of the borrower"
                  }
                },
                "required": [
                  "borrowerReferenceId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "Lending Grants"
        ]
      }
    },
    "/lending-grants/{id}/return": {
      "post": {
        "operationId": "LendingController_returnLease",
        "summary": "Return Asset",
        "description": "### Returns an `Asset` back to the lender.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identifies the lending Grant",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "borrowerReferenceId": {
                    "type": "string",
                    "description": "The reference id of the borrower"
                  }
                },
                "required": [
                  "borrowerReferenceId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Lending Grants"
        ]
      }
    },
    "/payments/{id}": {
      "get": {
        "operationId": "PaymentController_get",
        "summary": "Fetch Payment",
        "description": "### Returns `Payment` details.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identifies the payment",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the payment"
                    },
                    "env": {
                      "type": "string",
                      "description": "Environment the payment initiated on"
                    },
                    "externalId": {
                      "type": "string",
                      "description": "External ID of the payment"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the payment",
                      "enum": [
                        "Pending",
                        "Confirmed",
                        "Completed",
                        "Failed",
                        "Expired"
                      ]
                    },
                    "paymentUrl": {
                      "type": "string",
                      "description": "The url for the payment checkout"
                    },
                    "merchantId": {
                      "type": "string",
                      "description": "The id of the merchant charging the payment"
                    },
                    "externalMerchantId": {
                      "type": "string",
                      "description": "The id of the merchant charging the payment in the provider"
                    },
                    "amountCents": {
                      "type": "number",
                      "description": "The payment amount in cents"
                    },
                    "userEmail": {
                      "type": "string",
                      "description": "The email of the user who initiated the payment"
                    },
                    "userWallet": {
                      "type": "string",
                      "description": "The wallet address of the user who initiated the payment"
                    },
                    "title": {
                      "type": "string",
                      "description": "The item being purchased"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the item being purchased"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of payment"
                    },
                    "sku": {
                      "type": "object",
                      "description": "What is being purchased",
                      "nullable": true
                    },
                    "project": {
                      "description": "The project the payment is in",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The project id"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the project"
                            },
                            "avatar": {
                              "type": "string",
                              "description": "The optional avatar of the project"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "env",
                    "externalId",
                    "status",
                    "paymentUrl",
                    "merchantId",
                    "externalMerchantId",
                    "amountCents",
                    "type",
                    "project"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Payments"
        ]
      }
    },
    "/payments": {
      "get": {
        "operationId": "PaymentController_getAll",
        "summary": "Fetch All Payments",
        "description": "### Returns a list of `Payment`s.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "perPage",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "A list of Payments",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the payment"
                          },
                          "env": {
                            "type": "string",
                            "description": "Environment the payment initiated on"
                          },
                          "externalId": {
                            "type": "string",
                            "description": "External ID of the payment"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the payment",
                            "enum": [
                              "Pending",
                              "Confirmed",
                              "Completed",
                              "Failed",
                              "Expired"
                            ]
                          },
                          "paymentUrl": {
                            "type": "string",
                            "description": "The url for the payment checkout"
                          },
                          "merchantId": {
                            "type": "string",
                            "description": "The id of the merchant charging the payment"
                          },
                          "externalMerchantId": {
                            "type": "string",
                            "description": "The id of the merchant charging the payment in the provider"
                          },
                          "amountCents": {
                            "type": "number",
                            "description": "The payment amount in cents"
                          },
                          "userEmail": {
                            "type": "string",
                            "description": "The email of the user who initiated the payment"
                          },
                          "userWallet": {
                            "type": "string",
                            "description": "The wallet address of the user who initiated the payment"
                          },
                          "title": {
                            "type": "string",
                            "description": "The item being purchased"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the item being purchased"
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of payment"
                          },
                          "sku": {
                            "type": "object",
                            "description": "What is being purchased",
                            "nullable": true
                          },
                          "project": {
                            "description": "The project the payment is in",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The project id"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the project"
                                  },
                                  "avatar": {
                                    "type": "string",
                                    "description": "The optional avatar of the project"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "env",
                          "externalId",
                          "status",
                          "paymentUrl",
                          "merchantId",
                          "externalMerchantId",
                          "amountCents",
                          "type",
                          "project"
                        ]
                      }
                    },
                    "meta": {
                      "description": "Pagination related metadata",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "number",
                              "description": "The page number fetched"
                            },
                            "perPage": {
                              "type": "number",
                              "description": "The number of items in each page"
                            },
                            "totalPages": {
                              "type": "number",
                              "description": "The total number of pages in all results"
                            },
                            "totalResults": {
                              "type": "number",
                              "description": "The total result count"
                            }
                          },
                          "required": [
                            "page",
                            "perPage",
                            "totalPages",
                            "totalResults"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Payments"
        ]
      }
    },
    "/payments/checkout": {
      "post": {
        "operationId": "PaymentController_checkout",
        "summary": "Create a Payment",
        "description": "### Creates a Payment request for a `User`.\n      \n`User` completes the Payment request at the URL returned by this method.",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for the game",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Item being purchased"
                  },
                  "description": {
                    "type": "string",
                    "description": "Describes the item being purchased"
                  },
                  "amountCents": {
                    "type": "number",
                    "description": "Price of the item, in cents"
                  },
                  "quantity": {
                    "type": "number",
                    "description": "Amount of items being purchased"
                  },
                  "buyerId": {
                    "type": "string",
                    "description": "Identifies the `User` buying the item"
                  }
                },
                "required": [
                  "title",
                  "description",
                  "amountCents",
                  "quantity",
                  "buyerId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "A URL the User must visit to complete the payment"
                    },
                    "id": {
                      "type": "string",
                      "description": "An id used to reference the payment"
                    }
                  },
                  "required": [
                    "url",
                    "id"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Payments"
        ]
      }
    }
  },
  "info": {
    "title": "GameShift REST API",
    "description": "A single API for games to integrate with web3",
    "version": "0.0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "https://api.gameshift.dev"
    }
  ],
  "components": {
    "schemas": {
      "AssetAttributeDto": {
        "type": "object",
        "properties": {
          "traitType": {
            "type": "string",
            "description": "The name of the trait"
          },
          "value": {
            "type": "string",
            "description": "The value of the trait"
          }
        },
        "required": [
          "traitType",
          "value"
        ]
      },
      "CollectionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
          },
          "name": {
            "type": "string",
            "description": "The name given to the collection"
          },
          "description": {
            "type": "string",
            "description": "The description given to the collection"
          },
          "imageUrl": {
            "type": "string",
            "description": "The url of the image used to represent the collection",
            "nullable": true
          },
          "mintAddress": {
            "type": "string",
            "description": "The mint address of the collection on-chain",
            "nullable": true
          },
          "created": {
            "type": "number",
            "description": "Timestamp of collection creation"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "created"
        ]
      },
      "AssetOwnerDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "The wallet that currently holds this asset",
            "nullable": true
          },
          "referenceId": {
            "type": "string",
            "description": "The reference id associated with the wallet",
            "nullable": true
          }
        }
      },
      "AssetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Asset"
          },
          "attributes": {
            "description": "The attributes of the Asset",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "traitType": {
                  "type": "string",
                  "description": "The name of the trait"
                },
                "value": {
                  "type": "string",
                  "description": "The value of the trait"
                }
              },
              "required": [
                "traitType",
                "value"
              ]
            }
          },
          "created": {
            "type": "number",
            "description": "The date the Asset was created"
          },
          "name": {
            "type": "string",
            "description": "The name of the Asset"
          },
          "collection": {
            "description": "The collection the Asset belongs to",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name given to the collection"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description given to the collection"
                  },
                  "imageUrl": {
                    "type": "string",
                    "description": "The url of the image used to represent the collection",
                    "nullable": true
                  },
                  "mintAddress": {
                    "type": "string",
                    "description": "The mint address of the collection on-chain",
                    "nullable": true
                  },
                  "created": {
                    "type": "number",
                    "description": "Timestamp of collection creation"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "description",
                  "created"
                ]
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "The description provided when the Asset was created"
          },
          "imageUrl": {
            "type": "string",
            "description": "The URI for the image representing the Asset"
          },
          "status": {
            "type": "string",
            "description": "The current status of the Asset",
            "enum": [
              "Unprocessed",
              "Processing",
              "Committed"
            ]
          },
          "escrow": {
            "type": "boolean",
            "description": "If the asset is in escrow or not"
          },
          "mintAddress": {
            "type": "string",
            "description": "The address of the Asset on the blockchain"
          },
          "owner": {
            "description": "The current owner of the Asset.",
            "nullable": true,
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "The wallet that currently holds this asset",
                    "nullable": true
                  },
                  "referenceId": {
                    "type": "string",
                    "description": "The reference id associated with the wallet",
                    "nullable": true
                  }
                }
              }
            ]
          }
        },
        "required": [
          "id",
          "attributes",
          "created",
          "name",
          "description",
          "imageUrl",
          "status",
          "escrow",
          "mintAddress"
        ]
      },
      "PaginationMetaDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "description": "The page number fetched"
          },
          "perPage": {
            "type": "number",
            "description": "The number of items in each page"
          },
          "totalPages": {
            "type": "number",
            "description": "The total number of pages in all results"
          },
          "totalResults": {
            "type": "number",
            "description": "The total result count"
          }
        },
        "required": [
          "page",
          "perPage",
          "totalPages",
          "totalResults"
        ]
      },
      "PaginatedAssetDto": {
        "type": "object",
        "properties": {
          "data": {
            "description": "A list of Assets",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the Asset"
                },
                "attributes": {
                  "description": "The attributes of the Asset",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "traitType": {
                        "type": "string",
                        "description": "The name of the trait"
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of the trait"
                      }
                    },
                    "required": [
                      "traitType",
                      "value"
                    ]
                  }
                },
                "created": {
                  "type": "number",
                  "description": "The date the Asset was created"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the Asset"
                },
                "collection": {
                  "description": "The collection the Asset belongs to",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name given to the collection"
                        },
                        "description": {
                          "type": "string",
                          "description": "The description given to the collection"
                        },
                        "imageUrl": {
                          "type": "string",
                          "description": "The url of the image used to represent the collection",
                          "nullable": true
                        },
                        "mintAddress": {
                          "type": "string",
                          "description": "The mint address of the collection on-chain",
                          "nullable": true
                        },
                        "created": {
                          "type": "number",
                          "description": "Timestamp of collection creation"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "created"
                      ]
                    }
                  ]
                },
                "description": {
                  "type": "string",
                  "description": "The description provided when the Asset was created"
                },
                "imageUrl": {
                  "type": "string",
                  "description": "The URI for the image representing the Asset"
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the Asset",
                  "enum": [
                    "Unprocessed",
                    "Processing",
                    "Committed"
                  ]
                },
                "escrow": {
                  "type": "boolean",
                  "description": "If the asset is in escrow or not"
                },
                "mintAddress": {
                  "type": "string",
                  "description": "The address of the Asset on the blockchain"
                },
                "owner": {
                  "description": "The current owner of the Asset.",
                  "nullable": true,
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "The wallet that currently holds this asset",
                          "nullable": true
                        },
                        "referenceId": {
                          "type": "string",
                          "description": "The reference id associated with the wallet",
                          "nullable": true
                        }
                      }
                    }
                  ]
                }
              },
              "required": [
                "id",
                "attributes",
                "created",
                "name",
                "description",
                "imageUrl",
                "status",
                "escrow",
                "mintAddress"
              ]
            }
          },
          "meta": {
            "description": "Pagination related metadata",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "number",
                    "description": "The page number fetched"
                  },
                  "perPage": {
                    "type": "number",
                    "description": "The number of items in each page"
                  },
                  "totalPages": {
                    "type": "number",
                    "description": "The total number of pages in all results"
                  },
                  "totalResults": {
                    "type": "number",
                    "description": "The total result count"
                  }
                },
                "required": [
                  "page",
                  "perPage",
                  "totalPages",
                  "totalResults"
                ]
              }
            ]
          }
        },
        "required": [
          "data",
          "meta"
        ]
      },
      "CreateAssetDetailsDto": {
        "type": "object",
        "properties": {
          "attributes": {
            "description": "Add attributes to your Asset",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "traitType": {
                  "type": "string",
                  "description": "The name of the trait"
                },
                "value": {
                  "type": "string",
                  "description": "The value of the trait"
                }
              },
              "required": [
                "traitType",
                "value"
              ]
            }
          },
          "collectionId": {
            "type": "string",
            "description": "Add the Asset to an existing collection"
          },
          "description": {
            "type": "string",
            "description": "A description for the Asset",
            "maxLength": 64
          },
          "imageUrl": {
            "type": "string",
            "description": "A url to the image underlying the Asset"
          },
          "name": {
            "type": "string",
            "maxLength": 32,
            "description": "The name of the Asset. Max length: 32 chars"
          }
        },
        "required": [
          "description",
          "imageUrl",
          "name"
        ]
      },
      "CreateAssetDto": {
        "type": "object",
        "properties": {
          "details": {
            "description": "The asset to create",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "attributes": {
                    "description": "Add attributes to your Asset",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "traitType": {
                          "type": "string",
                          "description": "The name of the trait"
                        },
                        "value": {
                          "type": "string",
                          "description": "The value of the trait"
                        }
                      },
                      "required": [
                        "traitType",
                        "value"
                      ]
                    }
                  },
                  "collectionId": {
                    "type": "string",
                    "description": "Add the Asset to an existing collection"
                  },
                  "description": {
                    "type": "string",
                    "description": "A description for the Asset",
                    "maxLength": 64
                  },
                  "imageUrl": {
                    "type": "string",
                    "description": "A url to the image underlying the Asset"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "The name of the Asset. Max length: 32 chars"
                  }
                },
                "required": [
                  "description",
                  "imageUrl",
                  "name"
                ]
              }
            ]
          },
          "destinationUserReferenceId": {
            "type": "string",
            "description": "The reference id of the user the asset should be assigned to"
          }
        },
        "required": [
          "details",
          "destinationUserReferenceId"
        ]
      },
      "UpdateAssetDto": {
        "type": "object",
        "properties": {
          "imageUrl": {
            "type": "string",
            "description": "Image url of the Asset"
          },
          "attributes": {
            "description": "Update attributes on the Asset",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "traitType": {
                  "type": "string",
                  "description": "The name of the trait"
                },
                "value": {
                  "type": "string",
                  "description": "The value of the trait"
                }
              },
              "required": [
                "traitType",
                "value"
              ]
            }
          }
        }
      },
      "TransferAssetToUserDto": {
        "type": "object",
        "properties": {
          "onBehalfOf": {
            "type": "string",
            "description": "Identifies the User tranferring the Asset"
          },
          "destinationUserReferenceId": {
            "type": "string",
            "description": "Identifies the User receiving the Asset"
          },
          "destinationWallet": {
            "type": "string",
            "description": "Address of the wallet receiving the Asset"
          }
        },
        "required": [
          "onBehalfOf"
        ]
      },
      "MarkAssetForSaleDto": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "description": "Listing price for the Asset"
          }
        },
        "required": [
          "price"
        ]
      },
      "BuyAssetNowDto": {
        "type": "object",
        "properties": {
          "onBehalfOf": {
            "type": "string",
            "description": "The reference id of the buyer"
          }
        },
        "required": [
          "onBehalfOf"
        ]
      },
      "CreateLendDto": {
        "type": "object",
        "properties": {
          "lenderReferenceId": {
            "type": "string",
            "description": "Identifies the User lending the Asset"
          },
          "borrowerReferenceId": {
            "type": "string",
            "description": "Identifies the User borrowing the Asset"
          },
          "expiration": {
            "type": "number",
            "description": "The time the lending grant will expire"
          }
        },
        "required": [
          "lenderReferenceId",
          "borrowerReferenceId"
        ]
      },
      "ProjectUserDto": {
        "type": "object",
        "properties": {
          "referenceId": {
            "type": "string",
            "description": "The reference id of the user"
          },
          "address": {
            "type": "string",
            "description": "The wallet address of the user"
          },
          "email": {
            "type": "string",
            "description": "The email of the user"
          }
        },
        "required": [
          "referenceId",
          "address",
          "email"
        ]
      },
      "LendingGrantDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the LendingGrant entry"
          },
          "assetId": {
            "type": "string",
            "description": "The ID of the Asset being borrowed"
          },
          "ownerReferenceId": {
            "type": "string",
            "description": "The reference ID of the owner of the Asset"
          },
          "borrowerReferenceId": {
            "type": "string",
            "description": "The reference ID of the borrower of the Asset"
          },
          "expiration": {
            "format": "date-time",
            "type": "string",
            "description": "The expiration date and time of the borrowing period"
          },
          "created": {
            "format": "date-time",
            "type": "string",
            "description": "The date and time when the borrow entry was created"
          },
          "status": {
            "type": "string",
            "description": "The current status of the LendingGrant entry",
            "enum": [
              "Pending",
              "Accepted"
            ]
          },
          "lender": {
            "description": "The current owner of the Asset, if available",
            "nullable": true,
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "referenceId": {
                    "type": "string",
                    "description": "The reference id of the user"
                  },
                  "address": {
                    "type": "string",
                    "description": "The wallet address of the user"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email of the user"
                  }
                },
                "required": [
                  "referenceId",
                  "address",
                  "email"
                ]
              }
            ]
          },
          "borrower": {
            "description": "The current borrower of the Asset, if available",
            "nullable": true,
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "referenceId": {
                    "type": "string",
                    "description": "The reference id of the user"
                  },
                  "address": {
                    "type": "string",
                    "description": "The wallet address of the user"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email of the user"
                  }
                },
                "required": [
                  "referenceId",
                  "address",
                  "email"
                ]
              }
            ]
          },
          "environment": {
            "type": "object",
            "description": "The current environment of the Asset"
          },
          "projectId": {
            "type": "string",
            "description": "The lending grant's project ID"
          }
        },
        "required": [
          "id",
          "assetId",
          "ownerReferenceId",
          "borrowerReferenceId",
          "expiration",
          "created",
          "status",
          "environment",
          "projectId"
        ]
      },
      "PaginatedProjectUsersDto": {
        "type": "object",
        "properties": {
          "data": {
            "description": "A list of users",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "referenceId": {
                  "type": "string",
                  "description": "The reference id of the user"
                },
                "address": {
                  "type": "string",
                  "description": "The wallet address of the user"
                },
                "email": {
                  "type": "string",
                  "description": "The email of the user"
                }
              },
              "required": [
                "referenceId",
                "address",
                "email"
              ]
            }
          },
          "meta": {
            "description": "Pagination related metadata",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "number",
                    "description": "The page number fetched"
                  },
                  "perPage": {
                    "type": "number",
                    "description": "The number of items in each page"
                  },
                  "totalPages": {
                    "type": "number",
                    "description": "The total number of pages in all results"
                  },
                  "totalResults": {
                    "type": "number",
                    "description": "The total result count"
                  }
                },
                "required": [
                  "page",
                  "perPage",
                  "totalPages",
                  "totalResults"
                ]
              }
            ]
          }
        },
        "required": [
          "data",
          "meta"
        ]
      },
      "CreateProjectUserDto": {
        "type": "object",
        "properties": {
          "referenceId": {
            "type": "string",
            "description": "The reference id of the user. Must be unique, and cannot contain the character \"/\"."
          },
          "email": {
            "type": "string",
            "description": "`User`'s email address."
          }
        },
        "required": [
          "referenceId",
          "email"
        ]
      },
      "PaginatedCollectionDto": {
        "type": "object",
        "properties": {
          "data": {
            "description": "A list of Collections",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                },
                "name": {
                  "type": "string",
                  "description": "The name given to the collection"
                },
                "description": {
                  "type": "string",
                  "description": "The description given to the collection"
                },
                "imageUrl": {
                  "type": "string",
                  "description": "The url of the image used to represent the collection",
                  "nullable": true
                },
                "mintAddress": {
                  "type": "string",
                  "description": "The mint address of the collection on-chain",
                  "nullable": true
                },
                "created": {
                  "type": "number",
                  "description": "Timestamp of collection creation"
                }
              },
              "required": [
                "id",
                "name",
                "description",
                "created"
              ]
            }
          },
          "meta": {
            "description": "Pagination related metadata",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "number",
                    "description": "The page number fetched"
                  },
                  "perPage": {
                    "type": "number",
                    "description": "The number of items in each page"
                  },
                  "totalPages": {
                    "type": "number",
                    "description": "The total number of pages in all results"
                  },
                  "totalResults": {
                    "type": "number",
                    "description": "The total result count"
                  }
                },
                "required": [
                  "page",
                  "perPage",
                  "totalPages",
                  "totalResults"
                ]
              }
            ]
          }
        },
        "required": [
          "data",
          "meta"
        ]
      },
      "CreateCollectionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 32,
            "description": "Names the Asset Collection"
          },
          "description": {
            "type": "string",
            "description": "Describes the Asset Collection"
          },
          "imageUrl": {
            "type": "string",
            "description": "URL for the Asset Collection's image"
          }
        },
        "required": [
          "name",
          "description",
          "imageUrl"
        ]
      },
      "CreateAssetTemplateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Names the Asset created by the Template."
          },
          "description": {
            "type": "string",
            "description": "Describes the Asset created by the Template."
          },
          "sourceImage": {
            "type": "string",
            "description": "URL for the Asset's image",
            "default": "https://solana.com/src/img/branding/solanaLogoMark.png"
          },
          "collectionId": {
            "type": "string",
            "description": "Identifies the Asset Collection any Assets created by the Template will be assigned to"
          },
          "attributes": {
            "description": "Attributes for the Asset created by the Template",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "traitType": {
                  "type": "string",
                  "description": "The name of the trait"
                },
                "value": {
                  "type": "string",
                  "description": "The value of the trait"
                }
              },
              "required": [
                "traitType",
                "value"
              ]
            }
          }
        },
        "required": [
          "name",
          "description",
          "sourceImage"
        ]
      },
      "AssetTemplateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Asset Template"
          },
          "name": {
            "type": "string",
            "description": "When an Asset is created from this Asset Template, this name will be used"
          },
          "description": {
            "type": "string",
            "description": "When an Asset is created from this Asset Template, this description will be used"
          },
          "sourceImage": {
            "type": "string",
            "description": "When an Asset is created from this Asset Template, this image will be used"
          },
          "collection": {
            "description": "When an Asset is created from this Asset Template, it will be assigned to this Collection",
            "nullable": true,
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name given to the collection"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description given to the collection"
                  },
                  "imageUrl": {
                    "type": "string",
                    "description": "The url of the image used to represent the collection",
                    "nullable": true
                  },
                  "mintAddress": {
                    "type": "string",
                    "description": "The mint address of the collection on-chain",
                    "nullable": true
                  },
                  "created": {
                    "type": "number",
                    "description": "Timestamp of collection creation"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "description",
                  "created"
                ]
              }
            ]
          },
          "attributes": {
            "description": "When an Asset is created from this Asset Template, these attributes will be added to the Asset",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "traitType": {
                  "type": "string",
                  "description": "The name of the trait"
                },
                "value": {
                  "type": "string",
                  "description": "The value of the trait"
                }
              },
              "required": [
                "traitType",
                "value"
              ]
            }
          },
          "created": {
            "type": "string",
            "description": "Timestamp of asset creation"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "sourceImage",
          "created"
        ]
      },
      "MintFromAssetTemplateDto": {
        "type": "object",
        "properties": {
          "destinationUserReferenceId": {
            "type": "string",
            "description": "Identifies the User receiving the Asset"
          }
        },
        "required": [
          "destinationUserReferenceId"
        ]
      },
      "PaginatedAssetTemplateDto": {
        "type": "object",
        "properties": {
          "data": {
            "description": "A list of Asset Templates",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the Asset Template"
                },
                "name": {
                  "type": "string",
                  "description": "When an Asset is created from this Asset Template, this name will be used"
                },
                "description": {
                  "type": "string",
                  "description": "When an Asset is created from this Asset Template, this description will be used"
                },
                "sourceImage": {
                  "type": "string",
                  "description": "When an Asset is created from this Asset Template, this image will be used"
                },
                "collection": {
                  "description": "When an Asset is created from this Asset Template, it will be assigned to this Collection",
                  "nullable": true,
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The id of the collection. This is not an on-chain address, but instead an ID internal to GameShift"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name given to the collection"
                        },
                        "description": {
                          "type": "string",
                          "description": "The description given to the collection"
                        },
                        "imageUrl": {
                          "type": "string",
                          "description": "The url of the image used to represent the collection",
                          "nullable": true
                        },
                        "mintAddress": {
                          "type": "string",
                          "description": "The mint address of the collection on-chain",
                          "nullable": true
                        },
                        "created": {
                          "type": "number",
                          "description": "Timestamp of collection creation"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "created"
                      ]
                    }
                  ]
                },
                "attributes": {
                  "description": "When an Asset is created from this Asset Template, these attributes will be added to the Asset",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "traitType": {
                        "type": "string",
                        "description": "The name of the trait"
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of the trait"
                      }
                    },
                    "required": [
                      "traitType",
                      "value"
                    ]
                  }
                },
                "created": {
                  "type": "string",
                  "description": "Timestamp of asset creation"
                }
              },
              "required": [
                "id",
                "name",
                "description",
                "sourceImage",
                "created"
              ]
            }
          },
          "meta": {
            "description": "Pagination related metadata",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "number",
                    "description": "The page number fetched"
                  },
                  "perPage": {
                    "type": "number",
                    "description": "The number of items in each page"
                  },
                  "totalPages": {
                    "type": "number",
                    "description": "The total number of pages in all results"
                  },
                  "totalResults": {
                    "type": "number",
                    "description": "The total result count"
                  }
                },
                "required": [
                  "page",
                  "perPage",
                  "totalPages",
                  "totalResults"
                ]
              }
            ]
          }
        },
        "required": [
          "data",
          "meta"
        ]
      },
      "UpdateAssetTemplateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Names the Asset created by the Template."
          },
          "description": {
            "type": "string",
            "description": "Describes the Asset created by the Template."
          },
          "sourceImage": {
            "type": "string",
            "description": "URL for the Asset's image",
            "default": "https://solana.com/src/img/branding/solanaLogoMark.png"
          },
          "collectionId": {
            "type": "string",
            "description": "Identifies the Asset Collection any Assets created by the Template will be assigned to"
          },
          "attributes": {
            "description": "Attributes for the Asset created by the Template",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "traitType": {
                  "type": "string",
                  "description": "The name of the trait"
                },
                "value": {
                  "type": "string",
                  "description": "The value of the trait"
                }
              },
              "required": [
                "traitType",
                "value"
              ]
            }
          }
        }
      },
      "CheckoutAssetTemplateDto": {
        "type": "object",
        "properties": {
          "amountCents": {
            "type": "number",
            "description": "The price of the item in cents"
          },
          "quantity": {
            "type": "number",
            "description": "The quantity of the item"
          },
          "buyerId": {
            "type": "string",
            "description": "Reference id of the buyer"
          }
        },
        "required": [
          "amountCents",
          "quantity",
          "buyerId"
        ]
      },
      "CheckoutDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "A URL the User must visit to complete the payment"
          },
          "id": {
            "type": "string",
            "description": "An id used to reference the payment"
          }
        },
        "required": [
          "url",
          "id"
        ]
      },
      "BorrowerDto": {
        "type": "object",
        "properties": {
          "borrowerReferenceId": {
            "type": "string",
            "description": "The reference id of the borrower"
          }
        },
        "required": [
          "borrowerReferenceId"
        ]
      },
      "LenderDto": {
        "type": "object",
        "properties": {
          "lenderReferenceId": {
            "type": "string",
            "description": "The reference id of the lender"
          }
        },
        "required": [
          "lenderReferenceId"
        ]
      },
      "ProjectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The project id"
          },
          "name": {
            "type": "string",
            "description": "The name of the project"
          },
          "avatar": {
            "type": "string",
            "description": "The optional avatar of the project"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "PaymentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the payment"
          },
          "env": {
            "type": "string",
            "description": "Environment the payment initiated on"
          },
          "externalId": {
            "type": "string",
            "description": "External ID of the payment"
          },
          "status": {
            "type": "string",
            "description": "Status of the payment",
            "enum": [
              "Pending",
              "Confirmed",
              "Completed",
              "Failed",
              "Expired"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "description": "The url for the payment checkout"
          },
          "merchantId": {
            "type": "string",
            "description": "The id of the merchant charging the payment"
          },
          "externalMerchantId": {
            "type": "string",
            "description": "The id of the merchant charging the payment in the provider"
          },
          "amountCents": {
            "type": "number",
            "description": "The payment amount in cents"
          },
          "userEmail": {
            "type": "string",
            "description": "The email of the user who initiated the payment"
          },
          "userWallet": {
            "type": "string",
            "description": "The wallet address of the user who initiated the payment"
          },
          "title": {
            "type": "string",
            "description": "The item being purchased"
          },
          "description": {
            "type": "string",
            "description": "The description of the item being purchased"
          },
          "type": {
            "type": "string",
            "description": "The type of payment"
          },
          "sku": {
            "type": "object",
            "description": "What is being purchased",
            "nullable": true
          },
          "project": {
            "description": "The project the payment is in",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The project id"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the project"
                  },
                  "avatar": {
                    "type": "string",
                    "description": "The optional avatar of the project"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              }
            ]
          }
        },
        "required": [
          "id",
          "env",
          "externalId",
          "status",
          "paymentUrl",
          "merchantId",
          "externalMerchantId",
          "amountCents",
          "type",
          "project"
        ]
      },
      "PaginatedPaymentDto": {
        "type": "object",
        "properties": {
          "data": {
            "description": "A list of Payments",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the payment"
                },
                "env": {
                  "type": "string",
                  "description": "Environment the payment initiated on"
                },
                "externalId": {
                  "type": "string",
                  "description": "External ID of the payment"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the payment",
                  "enum": [
                    "Pending",
                    "Confirmed",
                    "Completed",
                    "Failed",
                    "Expired"
                  ]
                },
                "paymentUrl": {
                  "type": "string",
                  "description": "The url for the payment checkout"
                },
                "merchantId": {
                  "type": "string",
                  "description": "The id of the merchant charging the payment"
                },
                "externalMerchantId": {
                  "type": "string",
                  "description": "The id of the merchant charging the payment in the provider"
                },
                "amountCents": {
                  "type": "number",
                  "description": "The payment amount in cents"
                },
                "userEmail": {
                  "type": "string",
                  "description": "The email of the user who initiated the payment"
                },
                "userWallet": {
                  "type": "string",
                  "description": "The wallet address of the user who initiated the payment"
                },
                "title": {
                  "type": "string",
                  "description": "The item being purchased"
                },
                "description": {
                  "type": "string",
                  "description": "The description of the item being purchased"
                },
                "type": {
                  "type": "string",
                  "description": "The type of payment"
                },
                "sku": {
                  "type": "object",
                  "description": "What is being purchased",
                  "nullable": true
                },
                "project": {
                  "description": "The project the payment is in",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The project id"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the project"
                        },
                        "avatar": {
                          "type": "string",
                          "description": "The optional avatar of the project"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "id",
                "env",
                "externalId",
                "status",
                "paymentUrl",
                "merchantId",
                "externalMerchantId",
                "amountCents",
                "type",
                "project"
              ]
            }
          },
          "meta": {
            "description": "Pagination related metadata",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "number",
                    "description": "The page number fetched"
                  },
                  "perPage": {
                    "type": "number",
                    "description": "The number of items in each page"
                  },
                  "totalPages": {
                    "type": "number",
                    "description": "The total number of pages in all results"
                  },
                  "totalResults": {
                    "type": "number",
                    "description": "The total result count"
                  }
                },
                "required": [
                  "page",
                  "perPage",
                  "totalPages",
                  "totalResults"
                ]
              }
            ]
          }
        },
        "required": [
          "data",
          "meta"
        ]
      },
      "RequestCheckoutDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Item being purchased"
          },
          "description": {
            "type": "string",
            "description": "Describes the item being purchased"
          },
          "amountCents": {
            "type": "number",
            "description": "Price of the item, in cents"
          },
          "quantity": {
            "type": "number",
            "description": "Amount of items being purchased"
          },
          "buyerId": {
            "type": "string",
            "description": "Identifies the `User` buying the item"
          }
        },
        "required": [
          "title",
          "description",
          "amountCents",
          "quantity",
          "buyerId"
        ]
      }
    }
  }
}